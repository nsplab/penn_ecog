#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.2.3
# In conjunction with Tcl version 8.6
#    Apr. 21, 2014 09:58:39 AM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import l12_support
import tooltip

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    root.title('Launcher')
    root.geometry('624x557+691+420')
    l12_support.set_Tk_var()
    w = Launcher (root)
    l12_support.init(root, w)
    root.mainloop()

w = None
def create_Launcher (root, param=None):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    w.title('Launcher')
    w.geometry('624x557+691+420')
    l12_support.set_Tk_var()
    w_win = Launcher (w)
    l12_support.init(w, w_win, param)
    return w_win

def destroy_Launcher ():
    global w
    w.destroy()
    w = None


class Launcher:
    def __init__(self, master=None):
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'
        font10 = "-family {DejaVu Sans} -size -12 -weight bold -slant  " + \
            "roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])
        master.configure(relief="sunken")
        master.configure(highlightcolor="black")


        self.style.configure('TNotebook.Tab',background=_bgcolor)
        self.style.configure('TNotebook.Tab',foreground=_fgcolor)
        self.style.map('TNotebook.Tab',background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(master)
        self.TNotebook1.place(relx=0.02,rely=0.13,relheight=0.85,relwidth=0.96)
        self.TNotebook1.configure(width=602)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_pg0 = ttk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_pg0, padding=3)
        self.TNotebook1.tab(0, text="Subject",underline="-1",)
        self.TNotebook1_pg1 = ttk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_pg1, padding=3)
        self.TNotebook1.tab(1, text="Data Acquisition",underline="-1",)
        self.TNotebook1_pg2 = ttk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_pg2, padding=3)
        self.TNotebook1.tab(2, text="Squeeze Task",underline="-1",)
        self.TNotebook1_pg3 = ttk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_pg3, padding=3)
        self.TNotebook1.tab(3, text="BCI Task",underline="-1",)

        self.Label1 = Label (self.TNotebook1_pg0)
        self.Label1.place(relx=0.33,rely=0.04,height=19,width=31)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(text='''Age:''')

        self.Entry1 = Entry (self.TNotebook1_pg0)
        self.Entry1.place(relx=0.42,rely=0.04,relheight=0.05,relwidth=0.09)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Entry1.configure(textvariable=l12_support.age)

        self.Radiobutton1 = Radiobutton (self.TNotebook1_pg0)
        self.Radiobutton1.place(relx=0.4,rely=0.13,relheight=0.05,relwidth=0.09)

        self.Radiobutton1.configure(activebackground="#d9d9d9")
        self.Radiobutton1.configure(cursor="hand1")
        self.Radiobutton1.configure(text='''Male''')
        self.Radiobutton1.configure(value="Male")
        self.Radiobutton1.configure(variable=l12_support.gender)

        self.Radiobutton2 = Radiobutton (self.TNotebook1_pg0)
        self.Radiobutton2.place(relx=0.4,rely=0.18,relheight=0.05,relwidth=0.12)

        self.Radiobutton2.configure(activebackground="#d9d9d9")
        self.Radiobutton2.configure(cursor="hand1")
        self.Radiobutton2.configure(text='''Female''')
        self.Radiobutton2.configure(value="Female")
        self.Radiobutton2.configure(variable=l12_support.gender)

        self.Label2 = Label (self.TNotebook1_pg0)
        self.Label2.place(relx=0.33,rely=0.13,height=19,width=30)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(text='''Sex:''')

        self.Label3 = Label (self.TNotebook1_pg0)
        self.Label3.place(relx=0.22,rely=0.27,height=19,width=107)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(text='''Subject Number:''')

        self.Entry2 = Entry (self.TNotebook1_pg0)
        self.Entry2.place(relx=0.42,rely=0.27,relheight=0.05,relwidth=0.09)
        self.Entry2.configure(background="white")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(selectbackground="#c4c4c4")
        self.Entry2.configure(textvariable=l12_support.subjectNumber)

        self.Label4 = Label (self.TNotebook1_pg0)
        self.Label4.place(relx=0.2,rely=0.36,height=19,width=112)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(text='''Hand Dominance:''')

        self.Radiobutton3 = Radiobutton (self.TNotebook1_pg0)
        self.Radiobutton3.place(relx=0.4,rely=0.36,relheight=0.05,relwidth=0.19)

        self.Radiobutton3.configure(activebackground="#d9d9d9")
        self.Radiobutton3.configure(cursor="hand1")
        self.Radiobutton3.configure(text='''Right-handed''')
        self.Radiobutton3.configure(value="Right-handed")
        self.Radiobutton3.configure(variable=l12_support.hand)

        self.Radiobutton4 = Radiobutton (self.TNotebook1_pg0)
        self.Radiobutton4.place(relx=0.4,rely=0.4,relheight=0.05,relwidth=0.17)
        self.Radiobutton4.configure(activebackground="#d9d9d9")
        self.Radiobutton4.configure(cursor="hand1")
        self.Radiobutton4.configure(text='''Left-handed''')
        self.Radiobutton4.configure(value="Left-handed")
        self.Radiobutton4.configure(variable=l12_support.hand)

        self.Label5 = Label (self.TNotebook1_pg0)
        self.Label5.place(relx=0.2,rely=0.49,height=19,width=109)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(text='''Grid Hemisphere:''')

        self.Checkbutton1 = Checkbutton (self.TNotebook1_pg0)
        self.Checkbutton1.place(relx=0.4,rely=0.53,relheight=0.05,relwidth=0.1)
        self.Checkbutton1.configure(activebackground="#d9d9d9")
        self.Checkbutton1.configure(text='''Right''')
        self.Checkbutton1.configure(cursor="hand1")
        self.Checkbutton1.configure(variable=l12_support.gridHemisphereRight)

        self.Checkbutton2 = Checkbutton (self.TNotebook1_pg0)
        self.Checkbutton2.place(relx=0.4,rely=0.49,relheight=0.05,relwidth=0.08)

        self.Checkbutton2.configure(activebackground="#d9d9d9")
        self.Checkbutton2.configure(text='''Left''')
        self.Checkbutton2.configure(cursor="hand1")
        self.Checkbutton2.configure(variable=l12_support.gridHemisphereLeft)

        self.Label6 = Label (self.TNotebook1_pg1)
        self.Label6.place(relx=0.22,rely=0.07,height=19,width=129)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(text='''Machine being used:''')

        self.Label7 = Label (self.TNotebook1_pg1)
        self.Label7.place(relx=0.27,rely=0.16,height=19,width=93)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(text='''Sampling rate:''')

        self.Label8 = Label (self.TNotebook1_pg1)
        self.Label8.place(relx=0.25,rely=0.24,height=19,width=108)
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(text='''ECoG channels:''')

        self.TCombobox1 = ttk.Combobox (self.TNotebook1_pg1)
        self.TCombobox1.place(relx=0.45,rely=0.07,relheight=0.04,relwidth=0.21)
        self.TCombobox1.bind("<<ComboboxSelected>>", l12_support.MachineChanged)
        self.value_list = ['TDT','gHIamp','Imitator']
        self.TCombobox1.configure(values=self.value_list)
        self.TCombobox1.configure(textvariable=l12_support.machineBeingUsed)
        self.TCombobox1.configure(takefocus="")
        self.TCombobox1.configure(cursor="hand1")
        self.TCombobox1.configure(state='readonly')
        self.TCombobox1.current(0)

        l12_support.TComboboxFrq = ttk.Combobox (self.TNotebook1_pg1)
        l12_support.TComboboxFrq.place(relx=0.45,rely=0.16,relheight=0.04,relwidth=0.14)
        l12_support.value_list = ['24414.062500',]
        l12_support.TComboboxFrq.configure(values=self.value_list)
        l12_support.TComboboxFrq.configure(textvariable=l12_support.samplingRate)
        l12_support.TComboboxFrq.configure(takefocus="")
        l12_support.TComboboxFrq.configure(state='readonly')
        l12_support.TComboboxFrq.configure(cursor="hand1")
        tooltip.createToolTip(l12_support.TComboboxFrq, "Warning: the sampling rate should match the hardware,\n but it does not set the sampling rate of the hardware!")

        self.Entry3 = Entry (self.TNotebook1_pg1)
        self.Entry3.place(relx=0.45,rely=0.24,relheight=0.05,relwidth=0.24)
        self.Entry3.configure(background="white")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(selectbackground="#c4c4c4")
        self.Entry3.configure(textvariable=l12_support.ecogChannels)

        self.Label9 = Label (self.TNotebook1_pg1)
        self.Label9.place(relx=0.18,rely=0.33,height=19,width=136)
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(text='''Force sensor channel:''')

        self.Label10 = Label (self.TNotebook1_pg1)
        self.Label10.place(relx=0.25,rely=0.42,height=19,width=103)
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(text='''EMG channels:''')

        self.Label11 = Label (self.TNotebook1_pg1)
        self.Label11.place(relx=0.12,rely=0.51,height=19,width=182)
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(text='''Synchronizing pulse channel:''')

        self.Label33 = Label (self.TNotebook1_pg1)
        self.Label33.place(relx=0.12,rely=0.60,height=19,width=182)
        self.Label33.configure(activebackground="#f9f9f9")
        self.Label33.configure(text='''Total number of channels:''')

        self.Entry4 = Entry (self.TNotebook1_pg1)
        self.Entry4.place(relx=0.45,rely=0.33,relheight=0.05,relwidth=0.08)
        self.Entry4.configure(background="white")
        self.Entry4.configure(font="TkFixedFont")
        self.Entry4.configure(selectbackground="#c4c4c4")
        self.Entry4.configure(textvariable=l12_support.forceSensorChannel)

        self.Entry5 = Entry (self.TNotebook1_pg1)
        self.Entry5.place(relx=0.45,rely=0.42,relheight=0.05,relwidth=0.24)
        self.Entry5.configure(background="white")
        self.Entry5.configure(font="TkFixedFont")
        self.Entry5.configure(selectbackground="#c4c4c4")
        self.Entry5.configure(textvariable=l12_support.emgChannels)

        self.Entry6 = Entry (self.TNotebook1_pg1)
        self.Entry6.place(relx=0.45,rely=0.51,relheight=0.05,relwidth=0.08)
        self.Entry6.configure(background="white")
        self.Entry6.configure(font="TkFixedFont")
        self.Entry6.configure(selectbackground="#c4c4c4")
        self.Entry6.configure(textvariable=l12_support.synchronizingPulseChannel)

        self.Entry19 = Entry (self.TNotebook1_pg1)
        self.Entry19.place(relx=0.45,rely=0.60,relheight=0.05,relwidth=0.08)
        self.Entry19.configure(background="white")
        self.Entry19.configure(font="TkFixedFont")
        self.Entry19.configure(selectbackground="#c4c4c4")
        self.Entry19.configure(textvariable=l12_support.totalNumberOfChannels)

        self.ButtonDriver = Button (self.TNotebook1_pg1)
        self.ButtonDriver.place(relx=0.4,rely=0.69,height=37,width=127)
        self.ButtonDriver.configure(activebackground="#d9d9d9")
        self.ButtonDriver.configure(command=l12_support.LoadDriver)
        self.ButtonDriver.configure(cursor="hand1")
        self.ButtonDriver.configure(text='''Re/Load''')
        self.ButtonDriver.configure(wraplength="100")


        self.Button1 = Button (self.TNotebook1_pg2)
        self.Button1.place(relx=0.55,rely=0.38,height=97,width=117)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(command=l12_support.StopSqueezeTask)
        self.Button1.configure(cursor="hand1")
        self.Button1.configure(text='''Stop Squeeze Task''')
        self.Button1.configure(wraplength="100")

        self.Button2 = Button (self.TNotebook1_pg2)
        self.Button2.place(relx=0.32,rely=0.38,height=57,width=127)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(command=l12_support.RunDemoSqueeze)
        self.Button2.configure(cursor="hand1")
        self.Button2.configure(text='''Run Demo Squeeze Task''')
        self.Button2.configure(wraplength="100")

        self.Button3 = Button (self.TNotebook1_pg2)
        self.Button3.place(relx=0.32,rely=0.51,height=37,width=127)
        self.Button3.configure(activebackground="#d9d9d9")
        self.Button3.configure(command=l12_support.RunSqueeze)
        self.Button3.configure(cursor="hand1")
        self.Button3.configure(text='''Run Squeeze Task''')

        self.Label12 = Label (self.TNotebook1_pg2)
        self.Label12.place(relx=0.22,rely=0.11,height=19,width=168)
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(text='''Force sensor is in patient's:''')

        self.Radiobutton8 = Radiobutton (self.TNotebook1_pg2)
        self.Radiobutton8.place(relx=0.5,rely=0.11,relheight=0.05,relwidth=0.16)

        self.Radiobutton8.configure(activebackground="#d9d9d9")
        self.Radiobutton8.configure(cursor="hand1")
        self.Radiobutton8.configure(text='''Right Hand''')
        self.Radiobutton8.configure(value="Right Hand")
        self.Radiobutton8.configure(variable=l12_support.sensorHand)

        self.Radiobutton5 = Radiobutton (self.TNotebook1_pg2)
        self.Radiobutton5.place(relx=0.5,rely=0.16,relheight=0.05,relwidth=0.15)

        self.Radiobutton5.configure(activebackground="#d9d9d9")
        self.Radiobutton5.configure(cursor="hand1")
        self.Radiobutton5.configure(text='''Left Hand''')
        self.Radiobutton5.configure(value="Left hand")
        self.Radiobutton5.configure(variable=l12_support.sensorHand)

        self.Button4 = Button (self.TNotebook1_pg3)
        self.Button4.place(relx=0.57,rely=0.78,height=97,width=132)
        self.Button4.configure(activebackground="#d9d9d9")
        self.Button4.configure(command=l12_support.StopBCITask)
        self.Button4.configure(cursor="hand1")
        self.Button4.configure(text='''Stop BCI Task''')
        self.Button4.configure(wraplength="100")

        self.Button5 = Button (self.TNotebook1_pg3)
        self.Button5.place(relx=0.3,rely=0.78,height=67,width=147)
        self.Button5.configure(activebackground="#d9d9d9")
        self.Button5.configure(command=l12_support.StartDemoBCI)
        self.Button5.configure(cursor="hand1")
        self.Button5.configure(text='''Start Demo BCI Task (data is not written to file)''')
        self.Button5.configure(wraplength="100")

        self.Button6 = Button (self.TNotebook1_pg3)
        self.Button6.place(relx=0.3,rely=0.93,height=27,width=147)
        self.Button6.configure(activebackground="#d9d9d9")
        self.Button6.configure(command=l12_support.RunBCI)
        self.Button6.configure(cursor="hand1")
        self.Button6.configure(text='''Run BCI Task''')

        self.Button7 = Button (self.TNotebook1_pg3)
        self.Button7.place(relx=0.11,rely=0.78,height=97,width=107)
        self.Button7.configure(activebackground="#d9d9d9")
        self.Button7.configure(text='''Calibrate''')
        self.Button7.configure(command=l12_support.CalibrateBCI)
        self.Button7.configure(cursor="hand1")

        self.TLabelframe1 = ttk.Labelframe (self.TNotebook1_pg3)
        self.TLabelframe1.place(relx=0.02,rely=0.01,relheight=0.5,relwidth=0.97)

        self.TLabelframe1.configure(text='''Algorithm''')
        self.TLabelframe1.configure(width=580)

        self.TCombobox4 = ttk.Combobox (self.TLabelframe1)
        self.TCombobox4.place(relx=0.48,rely=0.09,relheight=0.08,relwidth=0.31)
        self.value_list = ['Running Average','Training JointRSE','Testing JointRSE',]
        self.TCombobox4.configure(values=self.value_list)
        self.TCombobox4.configure(textvariable=l12_support.algorithm)
        self.TCombobox4.configure(takefocus="")
        self.TCombobox4.configure(state="readonly")
        self.TCombobox4.current(0)

        self.Label13 = Label (self.TLabelframe1)
        self.Label13.place(relx=0.19,rely=0.08,height=19,width=162)
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(text='''BCI Algorithm being used:''')

        self.TNotebook2 = ttk.Notebook(self.TLabelframe1)
        self.TNotebook2.place(relx=0.02,rely=0.22,relheight=0.73,relwidth=0.97)
        self.TNotebook2.configure(width=562)
        self.TNotebook2.configure(takefocus="")
        self.TNotebook2_pg0 = ttk.Frame(self.TNotebook2)
        self.TNotebook2.add(self.TNotebook2_pg0, padding=3)
        self.TNotebook2.tab(0, text="Moving Average",underline="-1",)
        self.TNotebook2_pg1 = ttk.Frame(self.TNotebook2)
        self.TNotebook2.add(self.TNotebook2_pg1, padding=3)
        self.TNotebook2.tab(1, text="JointRSE",underline="-1",)
        self.TNotebook2_pg2 = ttk.Frame(self.TNotebook2)
        self.TNotebook2.add(self.TNotebook2_pg2, padding=3)
        self.TNotebook2.tab(2, text="Real-time PSD",underline="-1",)

        self.Label19 = Label (self.TNotebook2_pg0)
        self.Label19.place(relx=0.02,rely=0.07,height=19,width=304)
        self.Label19.configure(activebackground="#f9f9f9")
        self.Label19.configure(text='''x-axis channels (multiple channels are averaged):''')

        self.Label14 = Label (self.TNotebook2_pg0)
        self.Label14.place(relx=0.02,rely=0.21,height=19,width=336)
        self.Label14.configure(activebackground="#f9f9f9")
        self.Label14.configure(text='''x-axis frequencies (multiple frequencies are avergaed):''')

        self.Label15 = Label (self.TNotebook2_pg0)
        self.Label15.place(relx=0.02,rely=0.36,height=19,width=304)
        self.Label15.configure(activebackground="#f9f9f9")
        self.Label15.configure(text='''y-axis channels (multiple channels are averaged):''')

        self.Label16 = Label (self.TNotebook2_pg0)
        self.Label16.place(relx=0.02,rely=0.5,height=19,width=336)
        self.Label16.configure(activebackground="#f9f9f9")
        self.Label16.configure(text='''y-axis frequencies (multiple frequencies are avergaed):''')

        self.Label17 = Label (self.TNotebook2_pg0)
        self.Label17.place(relx=0.02,rely=0.64,height=19,width=303)
        self.Label17.configure(activebackground="#f9f9f9")
        self.Label17.configure(text='''z-axis channels (multiple channels are averaged):''')

        self.Label18 = Label (self.TNotebook2_pg0)
        self.Label18.place(relx=0.02,rely=0.79,height=19,width=335)
        self.Label18.configure(activebackground="#f9f9f9")
        self.Label18.configure(text='''z-axis frequencies (multiple frequencies are avergaed):''')

        self.Entry7 = Entry (self.TNotebook2_pg0)
        self.Entry7.place(relx=0.68,rely=0.07,relheight=0.15,relwidth=0.26)
        self.Entry7.configure(background="white")
        self.Entry7.configure(font="TkFixedFont")
        self.Entry7.configure(selectbackground="#c4c4c4")
        self.Entry7.configure(textvariable=l12_support.bciMovingaverageXChannels)

        self.Entry8 = Entry (self.TNotebook2_pg0)
        self.Entry8.place(relx=0.68,rely=0.21,relheight=0.15,relwidth=0.26)
        self.Entry8.configure(background="white")
        self.Entry8.configure(font="TkFixedFont")
        self.Entry8.configure(selectbackground="#c4c4c4")
        self.Entry8.configure(textvariable=l12_support.bciMovingaverageXFrequencies)

        self.Entry9 = Entry (self.TNotebook2_pg0)
        self.Entry9.place(relx=0.68,rely=0.36,relheight=0.15,relwidth=0.26)
        self.Entry9.configure(background="white")
        self.Entry9.configure(font="TkFixedFont")
        self.Entry9.configure(selectbackground="#c4c4c4")
        self.Entry9.configure(textvariable=l12_support.bciMovingaverageYChannels)

        self.Entry10 = Entry (self.TNotebook2_pg0)
        self.Entry10.place(relx=0.68,rely=0.5,relheight=0.15,relwidth=0.26)
        self.Entry10.configure(background="white")
        self.Entry10.configure(font="TkFixedFont")
        self.Entry10.configure(selectbackground="#c4c4c4")
        self.Entry10.configure(textvariable=l12_support.bciMovingaverageYFrequencies)

        self.Entry11 = Entry (self.TNotebook2_pg0)
        self.Entry11.place(relx=0.68,rely=0.64,relheight=0.15,relwidth=0.26)
        self.Entry11.configure(background="white")
        self.Entry11.configure(font="TkFixedFont")
        self.Entry11.configure(selectbackground="#c4c4c4")
        self.Entry11.configure(textvariable=l12_support.bciMovingaverageZChannels)

        self.Entry12 = Entry (self.TNotebook2_pg0)
        self.Entry12.place(relx=0.68,rely=0.79,relheight=0.15,relwidth=0.26)
        self.Entry12.configure(background="white")
        self.Entry12.configure(font="TkFixedFont")
        self.Entry12.configure(selectbackground="#c4c4c4")
        self.Entry12.configure(textvariable=l12_support.bciMovingaverageZFrequencies)

        self.Label20 = Label (self.TNotebook2_pg1)
        self.Label20.place(relx=0.02,rely=0.07,height=19,width=367)
        self.Label20.configure(activebackground="#f9f9f9")
        self.Label20.configure(text='''Channels used by BCI (multiple channels are not averaged):''')

        self.Label21 = Label (self.TNotebook2_pg1)
        self.Label21.place(relx=0.02,rely=0.5,height=19,width=426)
        self.Label21.configure(activebackground="#f9f9f9")
        self.Label21.configure(text='''Frequencies used by BCI (multiple frequencies are separate features):''')

        self.Entry13 = Entry (self.TNotebook2_pg1)
        self.Entry13.place(relx=0.5,rely=0.29,relheight=0.15,relwidth=0.48)
        self.Entry13.configure(background="white")
        self.Entry13.configure(font="TkFixedFont")
        self.Entry13.configure(selectbackground="#c4c4c4")
        self.Entry13.configure(textvariable=l12_support.bciJointrseChannels)

        self.Entry14 = Entry (self.TNotebook2_pg1)
        self.Entry14.place(relx=0.5,rely=0.71,relheight=0.15,relwidth=0.48)
        self.Entry14.configure(background="white")
        self.Entry14.configure(font="TkFixedFont")
        self.Entry14.configure(selectbackground="#c4c4c4")
        self.Entry14.configure(textvariable=l12_support.bciJointrseFrequencies)

        self.Label22 = Label (self.TNotebook2_pg2)
        self.Label22.place(relx=0.21,rely=0.14,height=19,width=87)
        self.Label22.configure(activebackground="#f9f9f9")
        self.Label22.configure(text='''Window type:''')

        self.Label23 = Label (self.TNotebook2_pg2)
        self.Label23.place(relx=0.21,rely=0.36,height=19,width=84)
        self.Label23.configure(activebackground="#f9f9f9")
        self.Label23.configure(text='''Window rate:''')

        self.Label24 = Label (self.TNotebook2_pg2)
        self.Label24.place(relx=0.18,rely=0.57,height=19,width=109)
        self.Label24.configure(activebackground="#f9f9f9")
        self.Label24.configure(text='''Window length:''')

        self.TCombobox3 = ttk.Combobox (self.TNotebook2_pg2)
        self.TCombobox3.place(relx=0.39,rely=0.14,relheight=0.14,relwidth=0.3)
        self.value_list = ['Rectangle','Hamming','Blackman-Harris',]
        self.TCombobox3.configure(values=self.value_list)
        self.TCombobox3.configure(textvariable=l12_support.psdWindowType)
        self.TCombobox3.configure(takefocus="")
        self.TCombobox3.configure(state="readonly")
        self.TCombobox3.current(0)

        self.Entry15 = Entry (self.TNotebook2_pg2)
        self.Entry15.place(relx=0.39,rely=0.36,relheight=0.15,relwidth=0.14)
        self.Entry15.configure(background="white")
        self.Entry15.configure(font="TkFixedFont")
        self.Entry15.configure(selectbackground="#c4c4c4")
        self.Entry15.configure(textvariable=l12_support.psdFeatureRate)

        self.Label25 = Label (self.TNotebook2_pg2)
        self.Label25.place(relx=0.54,rely=0.36,height=19,width=19)
        self.Label25.configure(activebackground="#f9f9f9")
        self.Label25.configure(text='''Hz''')

        self.Entry16 = Entry (self.TNotebook2_pg2)
        self.Entry16.place(relx=0.39,rely=0.57,relheight=0.15,relwidth=0.14)
        self.Entry16.configure(background="white")
        self.Entry16.configure(font="TkFixedFont")
        self.Entry16.configure(selectbackground="#c4c4c4")
        self.Entry16.configure(textvariable=l12_support.psdWindowLength)

        self.Label26 = Label (self.TNotebook2_pg2)
        self.Label26.place(relx=0.54,rely=0.57,height=19,width=83)
        self.Label26.configure(activebackground="#f9f9f9")
        self.Label26.configure(text='''milliseconds''')

        self.TLabelframe2 = ttk.Labelframe (self.TNotebook1_pg3)
        self.TLabelframe2.place(relx=0.02,rely=0.51,relheight=0.26
                ,relwidth=0.97)
        self.TLabelframe2.configure(text='''Virtual Environment''')
        self.TLabelframe2.configure(width=580)

        self.Label27 = Label (self.TLabelframe2)
        self.Label27.place(relx=0.31,rely=0.17,height=19,width=43)
        self.Label27.configure(activebackground="#f9f9f9")
        self.Label27.configure(text='''Game:''')

        self.TCombobox5 = ttk.Combobox (self.TLabelframe2)
        self.TCombobox5.place(relx=0.43,rely=0.17,relheight=0.17,relwidth=0.31)
        self.value_list = ['BCI Hero',]
        self.TCombobox5.configure(values=self.value_list)
        self.TCombobox5.configure(textvariable=l12_support.game)
        self.TCombobox5.configure(takefocus="")
        self.TCombobox5.configure(state="readonly")
        self.TCombobox5.current(0)

        self.Label28 = Label (self.TLabelframe2)
        self.Label28.place(relx=0.16,rely=0.35,height=19,width=141)
        self.Label28.configure(activebackground="#f9f9f9")
        self.Label28.configure(text='''Workspace Dimension:''')

        self.TCombobox6 = ttk.Combobox (self.TLabelframe2)
        self.TCombobox6.place(relx=0.43,rely=0.37,relheight=0.17,relwidth=0.31)
        self.value_list = ['1D','2D-xy','2D-xz',]
        self.TCombobox6.configure(values=self.value_list)
        self.TCombobox6.configure(textvariable=l12_support.workspace)
        self.TCombobox6.configure(takefocus="")
        self.TCombobox6.configure(state="readonly")
        self.TCombobox6.current(0)

        self.Label29 = Label (self.TLabelframe2)
        self.Label29.place(relx=0.02,rely=0.61,height=19,width=219)
        self.Label29.configure(activebackground="#f9f9f9")
        self.Label29.configure(text='''Target Bar width percent of screen:''')

        self.Label30 = Label (self.TLabelframe2)
        self.Label30.place(relx=0.07,rely=0.78,height=19,width=186)
        self.Label30.configure(activebackground="#f9f9f9")
        self.Label30.configure(text='''Target Bar Length in seconds:''')

        self.Entry17 = Entry (self.TLabelframe2)
        self.Entry17.place(relx=0.43,rely=0.59,relheight=0.18,relwidth=0.1)
        self.Entry17.configure(background="white")
        self.Entry17.configure(font="TkFixedFont")
        self.Entry17.configure(selectbackground="#c4c4c4")
        self.Entry17.configure(textvariable=l12_support.barWidth)

        self.Entry18 = Entry (self.TLabelframe2)
        self.Entry18.place(relx=0.43,rely=0.77,relheight=0.18,relwidth=0.1)
        self.Entry18.configure(background="white")
        self.Entry18.configure(font="TkFixedFont")
        self.Entry18.configure(selectbackground="#c4c4c4")
        self.Entry18.configure(textvariable=l12_support.barLength)

        self.menubar = Menu(master,bg=_bgcolor,fg=_fgcolor)
        master.configure(menu = self.menubar)



        self.Label31 = Label (master)
        self.Label31.place(relx=0.26,rely=0.02,height=19,width=305)
        self.Label31.configure(activebackground="#ed0707")
        self.Label31.configure(activeforeground="white")
        self.Label31.configure(background="#ff3030")
        self.Label31.configure(disabledforeground="#a30000")
        self.Label31.configure(font=font10)
        self.Label31.configure(highlightbackground="#d80000")
        self.Label31.configure(text='''Not streaming from data acquisition system''')
        self.Label31.configure(textvariable=l12_support.streamingState)

        self.Label32 = Label (master)
        self.Label32.place(relx=0.35,rely=0.07,height=19,width=183)
        self.Label32.configure(background="#ff3030")
        self.Label32.configure(font=font10)
        self.Label32.configure(text='''Not recording to local disk''')
        self.Label32.configure(textvariable=l12_support.recordingState)



if __name__ == '__main__':
    vp_start_gui()



